"""add generic id support

Revision ID: 3bc50ecd0bb
Revises: 18ced36d0df
Create Date: 2015-10-28 19:25:26.378971

"""

# chunk size to process tv/movies
PROCESS_CHUNK_SIZE = 5000

# revision identifiers, used by Alembic.
revision = '3bc50ecd0bb'
down_revision = '18ced36d0df'

from alembic import op
import sqlalchemy as sa
from pynab.db import TvShow, Movie, DBID, windowed_query
from sqlalchemy.orm import sessionmaker, Session
from sqlalchemy.schema import Sequence, CreateSequence

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('dbids',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('db_id', sa.String(length=50), nullable=True),
    sa.Column('db', sa.Enum('TVRAGE', 'TVMAZE', 'OMDB', 'IMDB', name='enum_dbid_name'), nullable=True),
    sa.Column('tvshow_id', sa.Integer(), nullable=True),
    sa.Column('movie_id', sa.Integer(), nullable=True),

    sa.PrimaryKeyConstraint('id'),
    mysql_charset='utf8',
    mysql_engine='InnoDB',
    mysql_row_format='DYNAMIC'
    )
    op.create_index('idx_db_id_db', 'dbids', ['db_id', 'db'], unique=False)
    op.create_index(op.f('ix_dbids_movie_id'), 'dbids', ['movie_id'], unique=False)
    op.create_index(op.f('ix_dbids_tvshow_id'), 'dbids', ['tvshow_id'], unique=False)

    i = 0

    bind = op.get_bind()
    Session = sessionmaker()
    db = Session(bind=bind)

    query = db.query(TvShow)
    for show in windowed_query(query, TvShow.id, PROCESS_CHUNK_SIZE):
        dbid = DBID()
        dbid.id = i
        dbid.db = 'TVRAGE'
        dbid.db_id = show.id
        db.tvshow_id = i
        show.id = i

        db.add(show)
        db.add(dbid)

        i += 1

    i = 0

    query = db.query(Movie)
    for movie in windowed_query(query, Movie.id, PROCESS_CHUNK_SIZE):
        dbid = DBID()
        dbid.id = i
        dbid.db = 'IMDB'
        dbid.db_id = movie.id
        db.movie_id = i
        movie.id = i

        db.add(movie)
        db.add(dbid)

        i += 1

    op.execute(CreateSequence(Sequence('movies_id_seq')))
    op.alter_column('movies', 'id',
               existing_type=sa.VARCHAR(length=20),
               type_=sa.Integer(),
               existing_nullable=False,
               server_default=sa.text('nextval(\'movies_id_seq\'::regclass)')
    )

    sa.ForeignKeyConstraint(['movie_id'], ['movies.id'], ),
    sa.ForeignKeyConstraint(['tvshow_id'], ['tvshows.id'], ),
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('movies', 'id',
               existing_type=sa.Integer(),
               type_=sa.VARCHAR(length=20),
               existing_nullable=False)
    op.drop_index(op.f('ix_dbids_tvshow_id'), table_name='dbids')
    op.drop_index(op.f('ix_dbids_movie_id'), table_name='dbids')
    op.drop_index('idx_db_id_db', table_name='dbids')
    op.drop_table('dbids')
    ### end Alembic commands ###
